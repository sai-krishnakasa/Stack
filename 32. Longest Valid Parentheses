32. Longest Valid Parentheses
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.
Example 1:
Input: s = "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()".
Example 2:

Input: s = ")()())"
Output: 4
Explanation: The longest valid parentheses substring is "()()".
Example 3:

Input: s = ""
Output: 0
 

Constraints:

0 <= s.length <= 3 * 104
s[i] is '(', or ')'.
Solution:

class Solution:
    def longestValidParentheses(self, s: str) -> int:
        maxl=0
        stack=[]
        stack=[-1]
        for i in range(len(s)):
            t=stack[-1]
            if s[i]==')' and s[t]=='(' and t!=-1:
                stack.pop()
                maxl=max(maxl,i-stack[-1])
            else:
                stack.append(i)
        return maxl
